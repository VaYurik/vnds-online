Комментарии

	Строки, начинающиеся с символов: ";" или "#" считаются комментариями и не обрабатываются.
	Для комментирования в конце строки используйте "//".

=======================================================================================================================

Работа с переменными

	Присваивание значений локальным переменным:
	setvar / var
		var [имя переменной] [оператор] [значение]
		Локальные переменные хранятся в локальном хранилище, обнуляясь либо при начале новой игры, либо командой 
			с параметром "~".
	
	Присваивание значений глобальным переменным:
	gsetvar / gvar
		gvar [имя переменной] [оператор] [значение]
		Глобальные переменные хранятся в локальном хранилище и уничтожаются исключительно командой с параметром "~".

!	Для команды "var" доступна упрощённая запись: если строка начинается с символа "$", команду setvar или var 
	можно не использовать.

		[имя переменной] - должно начинаться с буквы любого регистра или символа "$" и состоять из букв, 
			цифр и символа "_", не должно повторять имя команды и зарезервированного слова "selected".
			Вступительный символ "$" является синтаксическим сахаром и при обработке движком отбрасывается,
			таким образом переменные с именами, отличающимися лишь символом "$", с точки зрения движка - одна и та же 
			переменная. Однако использование префикса при создании новых проектов категорически рекомендуется.
			К каждому имени переменной движок добавляет префикс "var_".
		
		[оператор] - это один из следующих операторов:
			~ - сбросить переменную в ноль
			= - операция присвоения
			+ - операция сложения уже хранящегося в переменной значения с переданным значением
			- - операция вычитания из уже хранящегося в переменной значения переданного значение
			. - операция конкатенации (сложения строк) уже хранящегося в переменной значения с переданным значением
			* - операция умножения уже хранящегося в переменной значения на переданное значение
			/ - операция деления уже хранящегося в переменной значения на переданное значение

		[значение] - либо число, либо текстовая строка, либо другая переменная. Текстовые строки, содержащие пробел, 
			обязательно нужно заключать в кавычки.

		Примеры:
			$i = 0
			var $i ~ (в i будет храниться значение 0)
			var $i = 5 (в i будет храниться значение 5)
			var $i + 3 (в i будет храниться предыдущее значение i, увеличенное на 3; в нашем примере - 8)
			var $i . 2 (в i будет храниться предыдущее строка i, к которой добавится строка "2"; в нашем примере - "82")
			var $name = "Вася" (в name будет храниться значение "Вася")
			var $name + " Петров" (в name будет храниться значение "Вася Петров")

-----------------------------------------------------------------------------------------------------------------------

	Сравнение переменных
		if - fi
		if [имя переменной] [операция сравнения] [имя переменной или значение] - сравнить значение переменной со значением 
			другой переменной или просто значением и выполнить код, помещённый между оператором if и оператором fi.

		[операция сравнения] - одна из следующих операций:
				>  - больше
				<  - меньше
				== - равно
				!= - не равно
				>= - больше или равно
				<= - меньше или равно

		[имя переменной или значение] - имя существующей переменной или значение.
		
		Допускается вложенность блоков.
		Примеры:
			if $heads > 1
				text "Да сколько же у тебя голов?"
			fi

-----------------------------------------------------------------------------------------------------------------------

	Случайное число
		random / rand
		
		random [имя переменной] [минимальное значение] [максимальное значение]
		random [имя переменной] [максимальное значение]
		random [имя переменной]

		[имя переменной] - должно начинаться с буквы любого регистра или символа "$" и состоять из букв, 
			цифр и символа "_", не должно повторять имя команды и зарезервированного слова "selected".
			Вступительный символ "$" является синтаксическим сахаром и при обработке движком отбрасывается,
			таким образом переменные с именами, отличающимися лишь символом "$", с точки зрения движка - одна и та же 
			переменная. Однако использование префикса при создании новых проектов категорически рекомендуется.
			К каждому имени переменной движок добавляет префикс "var_".

		[минимальное значение] - число, указывающее минимальную границу интервала. Если не указано, равно нулю.
			Необязательный параметр.
		
		[максимальное значение] - число, указывающее максимальную границу интервала. Если не указано, равно единице.
			Необязательный параметр.

=======================================================================================================================

Работа с изображениями

	Цвет фона
		bgcolor / bgc - установить цвет подложки.

		bgc [код цвета]
		
		[код цвета] - трёх или шестизначный шестнадцатеричный код цвета (RGB), начинающийся с символа "#".

		Примеры:
			bgc #000 (цвет подложки будет установлен в чёрный)

-----------------------------------------------------------------------------------------------------------------------

	Фоновые изображения
		bgload / bg - вывести изображение в качестве фона, либо закрасить фон указанным цветом.

		bg [имя файла или код цвета] [выравнивание X] [выравнивание Y] [эффект] [длительность]
		
		[имя файла] - имя файла в директории "background", файл может быть любого поддерживаемого браузером формата.
			Имя файла, содержащее пробел, обязательно нужно заключать в кавычки.
		
		[код цвета] - трёх или шестизначный шестнадцатеричный код цвета (RGB), начинающийся с символа "#".

		[выравнивание X] [выравнивание Y] - выравнивание изображения фона по x и y, без единиц измерения - в 
			системе координат Nintendo DS, с единицами: "px" - пиксели, "%" - проценты.
			Исчисление идёт из левого верхнего угла.
			Возможно также использование следующих обозначений для позиционирования фона:
				по горизонтали:
					left     - фон выводится с левой границы экрана,
					right    - фон выводится с правой границы экрана,
					center   - фон выводится по центру экрана;
					
				по вертикали:
					top      - фон выводится с верхней границы экрана,
					bottom   - фон выводится с нижней границы экрана,
					center   - фон выводится по центру экрана.
			Необязательный параметр.
			Если координаты не указаны, фон будет выведен в центре экрана.

		[фильтр] - применяемый к изображению или изображениям фильтр.
			Фильтры:
				brightness - яркость,
				grayscale - чёрно-белое изображение,
				saturate - насыщенность,
				sepia - сепиа,
				invert - инверсия цветов,
				opacity - прозрачность,
				blur - размытие.
			Необязательный параметр.

		[сила фильтра] - сила фильтра в процентах (0-200). Действует в разных фильтрах по-разному. Так, в фильтре blur
			проценты просто переводятся в пиксели со значениями от 0 до 5, а указание 10% для opacity означает не то, что 
			изображение будет на 10% прозрачным, а наоборот, что оно будет прозрачным на 90% (т.е. фактически речь не о 
			"прозрачности", а о "видимости"). Я не стал вносить изменения в логику работы встроенных в CSS фильтров.
			Необязательный параметр, по умолчанию 50%.
! Фильтры можно комбинировать, в этом случае фильтры и их сила указываются один за другим через пробел.

		[эффект] - эффект, с которым будет выведено изображение. 
			Необязательный параметр.
			Возможные значения:
				dissolve - плавная смена старого изображения новым - "проявление" (используется по умолчанию);
				slide    - сворачивание старого изображения вверх и оттуда же разворачивание нового;
				flip     - сворачивание старого изображения влево и оттуда же разворачивание нового.
		
		[длительность] - указывается в кадрах (в 1 секунде 60 кадров), в секундах или в миллисекундах. По умолчанию 
			используется счёт в кадрах; чтобы сообщить движку, что значение указано в секундах или миллисекундах, нужно
			добавить после числового значения символы "s" или "ms", соответственно.

!	Отличие команды bgload от команды bg заключается в том, что первая удаляет все имеющиеся на экране спрайты, 
	причём безо всяких эффектов, а вторая - нет. Для удаления спрайтов рекомендуется использовать соответствующую
	команду - setimg/sprite/img с параметром ~.
! При передаче команде кода цвета в него будет также установлен и цвет подложки (команда bgc).
! При попытке передать функции одновременно координаты и эффект, кроме dissolve, возможно получение странного результата.

		Примеры:
			bg space-01.jpg 1s (в качестве фонового изображения будет использован файл space-01.jpg, 
				который будет в течение 1 секунды плавно появляться на экране)
			bg space-02.jpg slide 1s (в течение 0.5 секунды старый фон свернётся к верхней границе экрана, 
				а потом в течение 0.5 секунды развернётся новый - space-02.jpg)

-----------------------------------------------------------------------------------------------------------------------

	Спрайты
		setimg / img / sprite - вывести изображение поверх фона и, возможно, уже имеющихся изображений.

		img [идентификатор] [имя файла] [координата X] [координата Y] [фильтр] [сила фильтра] [эффект] [длительность]
		img [идентификатор] [имя файла] [координата X] [координата Y] [длительность]
		img [идентификатор/имя файла] ~ [длительность] - удаление спрайта
		img * ~ [длительность] или img ~ [длительность]

		[идентификатор] - это некий аналог переменной для изображения, впоследствии по нему можно обращаться к данному спрайту.
			Начинается с символа "@", содержит буквы, цифры и знак "_", имена команд использовать нельзя.
			При этом вступительный символ "@" является синтаксическим сахаром и при обработке движком символ "@" отбрасывается.
			К каждому идентификатору движок добавляет префикс "img_".
			Если не указан, идентификатор будет получен из имени файла, однако проще и удобнее использовать идентификатор,
			в том числе чтобы избежать ошибочного использования в качестве идентификатора переменной.
			Необязательный параметр.

		[имя файла] - имя файла в директории "foreground", файл может быть любого поддерживаемого браузером формата.
			Имя файла, содержащее пробел, обязательно нужно заключать в кавычки. Если изображение уже выведено и ему присвоен 
			идентификатор, но его нужно, допустим, просто переместить, то указывать не нужно.

		[координата X] [координата Y] - координаты верхнего левого угла спрайта по x и y, без единиц измерения - в 
			системе координат Nintendo DS, с единицами: "px" - пиксели, "%" - проценты.
			Исчисление идёт из левого верхнего угла.
			Возможно также использование следующих обозначений для позиционирования спрайтов:
				по горизонтали:
					left, left-side     - спрайт размещается в середине левой половины экрана,
					right, right-side   - спрайт размещается в середине левой половины экрана,
					left-in             - спрайт прижимается к левой границе экрана,
					right-in            - спрайт прижимается к правой границе экрана,
					left-out            - спрайт размещается слева от левой границы экрана (например, для анимации появления спрайта),
					right-out           - спрайт размещается справа от правой границы экрана (например, для анимации появления спрайта),
					center              - спрайт выводится по центру экрана;
					
				по вертикали:
					top, top-side       - спрайт размещается в середине верхней половины экрана,
					bottom, bottom-side - спрайт размещается в середине нижней половины экрана,
					top-in              - спрайт прижимается к верхней границе экрана,
					bottom-in           - спрайт прижимается к нижней границе экрана,
					top-out             - спрайт размещается сверху от верхней границы экрана (например, для анимации появления спрайта),
					bottom-out          - спрайт размещается снизу от нижней границы экрана (например, для анимации появления спрайта),
					center              - спрайт выводится по центру экрана.
			Необязательный параметр.
			Если координаты не указаны и спрайт с соответствующим идентификатором ещё не был создан, он будет создан в центре экрана.

		[фильтр] - применяемый к изображению или изображениям фильтр.
			Фильтры:
				brightness - яркость,
				grayscale - чёрно-белое изображение,
				saturate - насыщенность,
				sepia - сепиа,
				invert - инверсия цветов,
				opacity - прозрачность,
				blur - размытие.
			Необязательный параметр.

		[сила фильтра] - сила фильтра в процентах (0-200). Действует в разных фильтрах по-разному. Так, в фильтре blur
			проценты просто переводятся в пиксели со значениями от 0 до 5, а указание 10% для opacity означает не то, что 
			изображение будет на 10% прозрачным, а наоборот, что оно будет прозрачным на 90% (т.е. фактически речь не о 
			"прозрачности", а о "видимости"). Я не стал вносить изменения в логику работы встроенных в CSS фильтров.
			Необязательный параметр, по умолчанию 50%.
! Фильтры можно комбинировать, в этом случае фильтры и их сила указываются один за другим через пробел.

		[эффект] - эффект, с которым будет выведено изображение, на текущий момент один - dissolve, он же по умолчанию.
			Необязательный параметр.

		[длительность эффекта] - время появления спрайта (эффект dissolve), либо время на перемещение из точки, в которой он находился 
			до команды, в точку с переданными в команде координатами. Если не указано, то действие происходит мгновенно.
			Указывается в кадрах (в 1 секунде 60 кадров), в секундах или в миллисекундах. По умолчанию 
			используется счёт в кадрах; чтобы сообщить движку, что значение указано в секундах или миллисекундах, нужно
			добавить после числового значения символы "s" или "ms", соответственно.
			Необязательный параметр.

	Параметр "~" означает, что необходимо удалить указанные изображения. Вместо идентификатора или имени файла 
		в этом случае можно использовать символ "*" - это значит "все спрайты".

		Примеры:
			img @yu yumemi-face-confusion.png 0 10% 2s (в позицию x = 0, y = 10% плавно, в течение 2-х секунд, будет выведено 
				изображение из файла yumemi-face-confusion.png и ему будет присвоен идентификатор yu)
			img @yu 50% 10% 1s (изображение в течение 1-й секунды переместится в точку с координатами x = 50%, y = 10%)
			img @yu yumemi-face-normal.png 0.5s (за полсекунды изображение изменится на новое - из файла yumemi-face-normal.png)
			img @yu ~ 2s (и в течение 2-х секунд оно плавно исчезнет)

-----------------------------------------------------------------------------------------------------------------------

	Эффекты
		effect / eff - применить эффект к изображению спрайта или фона.
			
		effect [идентификатор/имя файла/*] [эффект] [сила] [длительность]
		effect [идентификатор/имя файла/*] ~
		effect ~

		[идентификатор] - существующий идентификатор изображения или "bg" для фона.
			Необязательный параметр.

		[имя файла] - имя файла спрайта, если для него не указан идентификатор.
			Необязательный параметр.

!	Вместо идентификатора и имени файла можно использовать символ "*" - это будет означать "все спрайты" (без фона), а 
	если вообще ничего не указывать, это будет означать "все спрайты и фон".
		
		[эффект] - применяемый к изображению или изображениям эффект.
			Эффекты:
				h-shake - горизонтальная тряска,
				v-shake - вертикальная тряска,
				zoom-in - приблизить,
				zoom-out - отдалить,
				hop - прыгать,
				rotate-left - вращать изображение против часовой стрелки,
				rotate-right - вращать изображение по часовой стрелке. 

		[сила] - сила эффекта в процентах (0-100).

		[длительность] - длительность действия эффекта. Если не указано, то будет действовать либо до команды отмены,
			либо до перехода к следующему фрагменту.
			Указывается в кадрах (в 1 секунде 60 кадров), в секундах или в миллисекундах. По умолчанию 
			используется счёт в кадрах; чтобы сообщить движку, что значение указано в секундах или миллисекундах, нужно
			добавить после числового значения символы "s" или "ms", соответственно.
			Необязательный параметр.

		Параметр "~" означает, что необходимо отменить для соответствующего изображения или изображений действие эффектов.
			Если в команде не указан идентификатор или имя файла, то отменяются все эффекты для всех изображения и фона.
		
		Примеры:
			eff @yu v-shake 20% 1s - спрайт, размытый в предыдущей команде, будет скакать одну секунду.
			eff bg h-shake 50% - фон начнёт колбасить, как при землетрясении, и продолжит колбасить либо до команды отмены, либо 
				до перехода к следующему фрагменту.
			eff ~ - отмена всех эффектов.

-----------------------------------------------------------------------------------------------------------------------

	Цикличная смена изображения
		relay / rel - применить эффект к изображению спрайта или фона.
			
		relay [имя файла 1] [имя файла 2] [имя файла N] [задержка] [эффект] [длительность]
		relay ~

		[имя файла N] - имена файлов изображений из директории foreground, которые будут сменять друг друга.

!	Изображения выводятся в центре экрана между фоном и спрайтами.

		[задержка] - длительность вывода каждого изображения.
			Указывается в кадрах (в 1 секунде 60 кадров), в секундах или в миллисекундах. По умолчанию 
			используется счёт в кадрах; чтобы сообщить движку, что значение указано в секундах или миллисекундах, нужно
			добавить после числового значения символы "s" или "ms", соответственно.

		[эффект] - эффект, с которым будет выведено изображение, на текущий момент один - dissolve, он же по умолчанию.
			Необязательный параметр.

		[длительность эффекта] - время появления и исчезновения спрайтов (эффект dissolve).
			Если не указано, то действие происходит мгновенно.
			Указывается в кадрах (в 1 секунде 60 кадров), в секундах или в миллисекундах. По умолчанию 
			используется счёт в кадрах; чтобы сообщить движку, что значение указано в секундах или миллисекундах, нужно
			добавить после числового значения символы "s" или "ms", соответственно.
			Необязательный параметр.

		Параметр "~" означает, что необходимо отменить действующую команду.
		
		Примеры:
			relay "firework1.png" "firework2.png" "firework3.png" 1s dissolve 1s - спрайты будут сменять друг друга через 1 секунду,
				плавно появляясь и исчезая.
			relay ~ - отмена выполняющейся команды.

-----------------------------------------------------------------------------------------------------------------------

	Анимации
		animation / anim - выполнить анимацию.
			
		animation [анимация] [сила]
		animation ~

		[анимация] - название выполняемой анимации.
			Анимации можно комбинировать.

			Анимации:
				snow - снегопад.

		[сила] - сила анимации в процентах (0-100). Если не указано, равно 100%.
			Необязательный параметр.

		Параметр "~" означает, что необходимо отменить действие текущей анимации.

!	В связи с ресурсоёмкостью анимации, на текущий момент не реализована возможность комбинирования разных анимаций.
	Новая анимация отменяет действующую.

!	Анимация, в отличие от фильтров и эффектов, действует бесконечно, пока не будет остановлена соответствующей командой.
		
		Примеры:
			anim snow 70% - начнётся сильный снегопад и будет продолжаться до команды отмены.
			anim ~ - отмена текущей анимации.

=======================================================================================================================

Работа с текстом
	Удаление окна сообщений
		clearscreen / cls
		
		cls - очистить и удалить окно сообщений до следующего сообщения, аналог команды "text" без параметров.
		
		Пример:
			cls - очистить и удалить окно сообщений.

-----------------------------------------------------------------------------------------------------------------------

	Очистка окна сообщений
		cleartext / clt
		
		clt - очистить окно сообщений.
		
		Пример:
			clt - очистить окно сообщений.

-----------------------------------------------------------------------------------------------------------------------

	Вывод текста в окно сообщений
		text / mes / msg
		
		text [текст] - вывести текст в окно сообщений (внизу экрана).

		Возможные опции:
			В квадратных скобках перед текстом можно указать автора, тогда его имя будет выведено в отдельном блоке в левом 
				верхнем углу окна сообщений.
			text (без параметров и текста) - очистить и убрать окно сообщений.
			text !  - дождаться клика, после чего очистить и убрать окно сообщений.
			text ~  - очистить окно сообщений (аналог команды cls).
			text @  - не дожидаться клика после вывода текста, следующий фрагмент выводится с новой строки.
			text @@ - не дожидаться клика после вывода текста, следующий фрагмент выводится в той же строке.
			text +  - вывести текущий фрагмент после уже выведенного текста, фрагмент выводится с новой строки.
			text ++  - вывести текущий фрагмент после уже выведенного текста, фрагмент выводится в той же строке.

			Как в тексте, так и в имени, можно использовать переменные, но в этом случае их либо необходимо заключить 
				в фигурные скобки, либо их имена должны начинаться префиксом "$".

!	В тексте допустимо использовать html-теги. Принудительный перевод строки - "<br>" или "\n".

!	Для команды "text" доступна упрощённая запись: если строка начинается с кавычки и кавычкой же заканчивается,
	то перед такой строкой движок добавит команду "text", а кавычки будут убраны (повествование); если же строка 
	начинается с открывающей квадратной скобочки - "[" и строка заканчивается на кавычку, то перед такой строкой
	движок так же добавит команду "text", однако кавычки убраны не будут (прямая речь).

		Примеры:
			text [Некоко] (Хех-хе. Мэджик гриб Кохея найден!) - выведет в поле имени имя - "Некоко", а в поле сообщения - текст.
			text ~ - очистить окно сообщений.

-----------------------------------------------------------------------------------------------------------------------

	Вывод текста в окно заметки
		note
		
		note [текст] - вывести текст в окно сообщений (на весь экран).
		
		Команда аналогична команде text, за исключением размера блока.

=======================================================================================================================

Работа с видео

	Фоновая музыка
		video / vid - воспроизвести видео.
		
		vid [имя файла] [эффект] [длительность]

		[имя файла] - имя файла в директории "video", файл может быть любого поддерживаемого браузером формата. 

		[эффект] - эффект, с которым будет начато или закончено воспроизведение видео, на текущий момент один - dissolve, он же по умолчанию.
			Необязательный параметр.

		[длительность] - длительность эффекта затухания при смене или остановке воспроизведения видео.
			Указывается в кадрах (в 1 секунде 60 кадров), в секундах или в миллисекундах. По умолчанию 
			используется счёт в кадрах; чтобы сообщить движку, что значение указано в секундах или миллисекундах, нужно
			добавить после числового значения символы "s" или "ms", соответственно.
		
! Разные браузеры поддерживают разные видеоформаты. Если у вас не воспроизводятся видеофайлы конкретного формата,
	проблема, скорее всего, в отсутствии поддержки со стороны браузера.

		Примеры:
			vid "op_1.mp4" 3s - начнёт воспроизведение видеофайла op_1.mp4 с плавным переходом в течение трёх секунд.

=======================================================================================================================

Работа со звуком

	Фоновая музыка
		music / mus - воспроизвести музыку.
		
		mus [имя файла] [эффект] [длительность] [громкость]
		mus ~

		[имя файла] - имя файла в директории "sound", файл может быть любого поддерживаемого браузером формата. 

		[эффект] - эффект, с которым будет начато или закончено воспроизведение музыки, на текущий момент один - easy, он же по умолчанию.
			Необязательный параметр.

		[длительность] - длительность эффекта затухания при смене или остановке воспроизведения музыки.
			Указывается в кадрах (в 1 секунде 60 кадров), в секундах или в миллисекундах. По умолчанию 
			используется счёт в кадрах; чтобы сообщить движку, что значение указано в секундах или миллисекундах, нужно
			добавить после числового значения символы "s" или "ms", соответственно.

		[громкость] - громкость музыки в процентах.
			Необязательный параметр.
		
! Разные браузеры поддерживают разные аудиоформаты. Если у вас не воспроизводятся звуковые файлы конкретного формата,
	проблема, скорее всего, в отсутствии поддержки со стороны браузера.

		Воспроизведение будет вестись по кругу, до команды отмены.

		Параметр "~" означает, что необходимо прекратить воспроизведение музыки.
		
		Примеры:
			mus "Gentle Jena.mp3" - начнёт воспроизведение композиции Gentle Jena.
			mus 50% easy 2.0s - громкость играющей музыки плавно уменьшится вдвое в течение двух секунд
			mus ~ - остановит воспроизведение.

-----------------------------------------------------------------------------------------------------------------------

	Фоновый звук
		sound / snd - воспроизвести звук.
		
		snd [имя файла] [количество повторов] [громкость]
		snd ~

		[имя файла] - имя файла в директории "sound", файл может быть любого поддерживаемого браузером формата. 

		[количество повторов] - число повторов звука, по умолчанию - 1; -1 - беспрерывное воспроизведение до команды отмены.
			Необязательный параметр.

		[громкость] - громкость звука в процентах.
			Необязательный параметр.

! Разные браузеры поддерживают разные аудиоформаты. Если у вас не воспроизводится звуковые файлы конкретного формата,
	проблема, скорее всего, в отсутствии его поддержки со стороны браузера.

		Параметр "~" означает, что необходимо прекратить воспроизведение звука.

		Примеры:
			snd "step.ogg" - один раз воспроизведёт звук шагов - "step".
			snd "drill.aac" -1 - звук дрели будет бесконечен.
			snd ~ - дрель всё же замолкнет.

-----------------------------------------------------------------------------------------------------------------------

	Звуковые эффекты
		sfx - воспроизвести звуковой эффект.
		sfx ~

		sfx [имя файла] [громкость]

		[имя файла] - имя файла в директории "sound", файл может быть любого поддерживаемого браузером формата. 

		[громкость] - громкость эффект в процентах.
			Необязательный параметр.

! Разные браузеры поддерживают разные аудиоформаты. Если у вас не воспроизводится звуковые файлы конкретного формата,
	проблема, скорее всего, в отсутствии его поддержки со стороны браузера.

! Команда идентична команде sound, выполненной однократно, но воспроизведение идёт в другом канале, так что можно
	комбинировать команду sound и sfx.

		Параметр "~" означает, что необходимо прекратить воспроизведение звука.

		Примеры:
			sfx "door.ogg" - один раз воспроизведёт звук "door".

=======================================================================================================================

Переходы

	Метка
		label - метка в скрипте для последующего перехода.

		label [имя метки]

		[имя метки] - имя метки латинскими буквами, первый символ - буква, остальные - буквы, цифры и символ "_".
	
		Пример:
			label start - поставили метку для последующего перехода.

-----------------------------------------------------------------------------------------------------------------------

	Переход внутри скрипта
		goto - переход внутри текущего скрипта

		goto [имя метки/номер строки]

		[имя метки] - имя существующей метки.
	
		[номер строки] - номер строки в скрипте.

		Предпочтительнее пользоваться метками, чтобы изменения в скрипте не привели впоследствии к ошибкам.

		Примеры:
			goto start - переход на метку "start" в текущем скрипте.

-----------------------------------------------------------------------------------------------------------------------

	Переход к другому скрипту
		jump - переход к другому скрипту и, возможно, к метке внутри него
		
		jump [имя скрипта] [имя метки/номер строки]

		[имя скрипта] - имя скрипта, в который нужно перейти.

		[имя метки] - имя существующей в скрипте, в который происходит переход, метки.
		[номер строки] - номер строки в скрипте, в который происходит переход.
			Необязательный параметр.

		Предпочтительнее пользоваться метками, чтобы изменения в скрипте не привели впоследствии к ошибкам.

		Примеры:
			jump "graphics.scr" - переход в начало скрипта "graphics.scr".
			jump "main.scr" start - переход на метку "sprites" в скрипте "main.scr".

=======================================================================================================================

Выборы
	Выбор пользователя
		choice / select / sel

		choice [выбор 1]|[выбор 2]|[выбор 3]

		[выбор N] - строка с текстом выбора.
	
		Максимальное количество выборов - 22.
	
		Индекс выбранного пункта будет храниться в переменной "selected", нумерация с 1.

		Примеры:
			select Пойти погулять | Никуда не ходить - вывести меню выбора из двух пунктов, после выбора пользователя
				результат будет занесён в системную переменную selected.

=======================================================================================================================

Разное
	Пауза
		delay / pause / wait - пауза, в этот момент перейти к следующей строчке скрипта по клику невозможно.

		wait [длительность]
		[длительность] - длительность паузы.
			Указывается в кадрах (в 1 секунде 60 кадров), в секундах или в миллисекундах. По умолчанию 
			используется счёт в кадрах; чтобы сообщить движку, что значение указано в секундах или миллисекундах, нужно
			добавить после числового значения символы "s" или "ms", соответственно.

!	Эту команду можно комбинировать с командами вывода изображений, создавая простейшие анимации.
			
		Пример:
			wait 2s - двухсекундная пауза
		
=======================================================================================================================

	Принудительная остановка быстрой прокрутки (скипа)
		stopskip

-----------------------------------------------------------------------------------------------------------------------
	Выход из скрипта (переход на главную страницу)
		quit

-----------------------------------------------------------------------------------------------------------------------
	Сброс информации о прохождении
	
		reset - сброс кеша прочитанных фрагментов, который используется при настройке "пропускать непрочитанное",
			и всех глобальных переменных. Удаление сохранений не производится - для этого используйте команду save ~.
		
		Пример:
			reset

-----------------------------------------------------------------------------------------------------------------------
	Выполнение произвольного кода javascript
		exec - выполнение команды или набора команд javascript.

		exec [команда]
		[команда] - команда или набор команд javascript.

!	Команды можно писать в кавычках, разделяя точкой с запятой.
			
		Пример:
			exec "alert('Привет!');" - выведет соответствующее окно в надписью "Привет"

-----------------------------------------------------------------------------------------------------------------------
	Проверка скрипта на ошибки
	
		check - проверка всех команд в скрипте после портирования на предмет выявления возможных ошибок.
		
		check [имя скрипта]

		[имя скрипта] - имя скрипта, который нужно проверить.

		Пример:
			check script.scr
